<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <RootNamespace>OpenSense.Components.MediaPipe.NET</RootNamespace>
        <AssemblyName>OpenSense.Components.MediaPipe.NET</AssemblyName>
        <LangVersion>11.0</LangVersion>
        <EmbedAllSources>true</EmbedAllSources>
        <!--Note:
        /psi Image does not support Span<T>, so we need to use pointers.
        -->
        <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
        <AssemblyVersion>1.0.0</AssemblyVersion>
        <Version>1.0.0</Version>
        <Authors>Intelligent Human Perception Lab</Authors>
        <Product>OpenSense</Product>
        <Description>
            Mediapipe.NET component of OpenSense.
            This package uses the CPU runtime, if you want to use other runtimes, please compile from source.
            The face_detection and face_landmark models are included for convenience.
        </Description>
        <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <RepositoryUrl>https://github.com/ihp-lab/OpenSense.git</RepositoryUrl>

        <!-- GPU conditions--><!--TODO: not working as expected.-->
        <!--<DefineConstants>$(DefineConstants);GPU</DefineConstants>-->
        <UseGPU Condition="$([System.Text.RegularExpressions.Regex]::IsMatch($(DefineConstants), '^(.*;)*GPU(;.*)*$'))">true</UseGPU>
    </PropertyGroup>

    <ItemGroup>
        <None Include="$(SolutionDir)/LICENSE.txt" Pack="true" PackagePath=""/>
        <None Include="$(SolutionDir)/README.md" Pack="true" PackagePath="\"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Mediapipe.Net" Version="1.0.0-alpha2" />
        <!--Note:
        The latest Mediapipe.Net.Runtime.CPU version is 1.0.0-alpha2.
        Exported symbols in native DLL is incompatible with Mediapipe.Net version 1.0.0-alpha2.
        The native API bindings in Mediapipe.Net 1.0.0-alpha2 is out-dated, while Mediapipe.Net.Runtime.CPU 1.0.0-alpha2 contains new APIs (from MediaPipeUnityPlugin).
        Mediapipe.Net contains many useful .NET types.
        So, we are using an older version of Mediapipe.Net.Runtime.CPU.
        -->
        <PackageReference Include="Mediapipe.Net.Runtime.CPU" Version="0.8.9.1" Condition="'$(UseGPU)' != 'true'" />
        <PackageReference Include="Mediapipe.Net.Runtime.GPU" Version="0.8.9.1" Condition="'$(UseGPU)' == 'true'" />
        <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="7.0.0" />
        <PackageReference Include="Microsoft.Psi.Imaging" Version="0.18.72.1-beta" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
        <PackageReference Include="System.Composition" Version="7.0.0" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\..\ComponentContract\ComponentContract.csproj" />
    </ItemGroup>

    <ItemGroup>
        <!--Note: 
        PackagePath is added to prevent duplication in content and contentFiles.
        ContentTargetFolders is default to content and contentFiles.
        We are not setting ContentTargetFolders to contentFiles because files will be put into contentFiles/any/netstandard2.1, which is not what we want.
        -->

        <!--Samples-->
        <Content Include="mediapipe/**/*.pbtxt" >
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            <PackagePath>contentFiles/any/any</PackagePath>
        </Content>
        <Content Include="mediapipe/**/*.tflite" >
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            <PackagePath>contentFiles/any/any</PackagePath>
        </Content>
    </ItemGroup>

</Project>